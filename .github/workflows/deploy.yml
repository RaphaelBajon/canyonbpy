name: Deploy Package

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  test-deploy:
    name: Deploy to TestPyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Check version on TestPyPI and Upload if new
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
        TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/
      run: |
        # Get current version
        VERSION=$(python setup.py --version)
        echo "Package version: $VERSION"
        
        # Try to install current version from TestPyPI
        if pip install --index-url https://test.pypi.org/simple/ --no-deps canyonbpy==$VERSION 2>/dev/null; then
          echo "Version $VERSION already exists on TestPyPI"
          exit 1
        else
          echo "Version $VERSION not found on TestPyPI, uploading..."
          python -m twine upload --verbose dist/*
        fi

    - name: Wait for TestPyPI to process upload
      run: sleep 60

    - name: Test installation from TestPyPI
      run: |
        python -m pip install --index-url https://test.pypi.org/simple/ --no-deps canyonbpy
        python -c "from canyonbpy import CANYON_B"

  deploy-prod:
    name: Deploy to PyPI
    needs: test-deploy
    runs-on: ubuntu-latest
    if: success()
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Check version on PyPI and Upload if new
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        # Get current version
        VERSION=$(python setup.py --version)
        echo "Package version: $VERSION"
        
        # Try to install current version from PyPI
        if pip install canyonbpy==$VERSION 2>/dev/null; then
          echo "Version $VERSION already exists on PyPI"
          exit 1
        else
          echo "Version $VERSION not found on PyPI, uploading..."
          python -m twine upload --verbose dist/*
        fi